// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id    Int     @default(autoincrement()) @id
  email String  @unique
  name  String?
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  banks Bank[]
  budgets Budget[]
  payments Payment[]
}


model Bank{
  id    Int     @default(autoincrement()) @id
  name  String
  code String
  accountNumber String
  accountName String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Budget{
  id    Int     @default(autoincrement()) @id
  name  String
  amount Int
  balance Int?
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  status BudgetStatus @default(INACTIVE)
  budgetItems BudgetItem[]
  payments Payment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model BudgetItem{
  id    Int     @default(autoincrement()) @id
  name  String
  amount Int
  type BudgetItemType
  date DateTime

  budget   Budget   @relation(fields: [budgetId], references: [id], onDelete: Cascade)
  budgetId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}


model Payment{
    id    Int     @default(autoincrement()) @id
    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId Int
    budget   Budget   @relation(fields: [budgetId], references: [id], onDelete: Cascade)
    budgetId Int
    reference String @unique
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    status PaymentStatus @default(pending)

}

enum PaymentStatus {
  success
  failed
  pending
}

enum BudgetStatus {
  INACTIVE
  ACTIVE
  COMPLETED
}

enum BudgetItemType {
  RECURRING
  NON_RECURRING
}